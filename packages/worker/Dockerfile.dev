ARG NODE_VERSION="20.10"
ARG ALPINE_VERSION="3.18"
ARG DOCKER_COMPOSE_VERSION="v2.23.3"

FROM node:${NODE_VERSION}-alpine${ALPINE_VERSION} AS node_base


# Install docker
RUN apk upgrade --update-cache --available && \
  apk add openssl git docker docker-cli-compose curl && \
  rm -rf /var/cache/apk/*

ARG TARGETARCH
ARG DOCKER_COMPOSE_VERSION="v2.23.3"
ENV TARGETARCH=${TARGETARCH}

RUN echo "Building for ${TARGETARCH}"

RUN if [ "${TARGETARCH}" = "arm64" ]; then \
  curl -L -o docker-binary "https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-linux-aarch64"; \
  elif [ "${TARGETARCH}" = "amd64" ]; then \
  curl -L -o docker-binary "https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-linux-x86_64"; \
  fi

RUN chmod +x docker-binary

RUN mv docker-binary /usr/local/bin/docker-compose

RUN npm install pnpm -g

WORKDIR /app

COPY ./pnpm-lock.yaml ./
COPY ./pnpm-workspace.yaml ./
COPY ./patches ./patches
RUN pnpm fetch --no-scripts

COPY ./packages/worker/assets ./assets
COPY ./packages ./packages

RUN pnpm install -r --prefer-offline 


CMD ["pnpm", "--filter", "@runtipi/worker", "-r", "dev"]

